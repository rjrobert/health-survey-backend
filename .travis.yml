# Matrix build runs 4 parallel builds
matrix:
  include:
    - language: go  # Build and Test
      sudo: required
      services:
        - docker
      script:
        - export GO111MODULE=on
        - go mod vendor  # Download dependencies
        - make build  # Build application
        - test -f bin/linux_amd64/health-survey-backend  # Test for presence of binary built in previous step
        - make all-container  # Make all Docker containers
        - docker images | grep "^docker.pkg.github.com/rjrobert/health-survey-backend/health-survey-backend.*__linux_amd64"  # Check presence of created images
        - make test  # Runs tests inside test image

    - language: go  # SonarCloud
      addons:
        sonarcloud:
          organization: rjrobert-github
          token: 
            secure: "FO5nABvUO76Gl6E3sxO6LtAA8QpZP5Cv32AIu5EqgIK1FxJSjYlongIsCfnuqqBxs8em1zlq6sTzokO4Szc3TdZRDdn+C/4X0U70aH4PFWz886NuoAhSFit9iyheL1KAu1bcO5eNHWvDJpromwADcuF5kjrW8PUAQOf5Wkkbyg1RjBuwKFe88sYgTGmfU6KollFMJqvsc32epX9yIHWSLCF+861inssEOdfbN1kiTfU/1pM/lCO0Mz9/Kk4XyzTC+O2amlM6GU+c/bY3Jxq+LiXIhB1k4UAi/LaM6bDqQpRMC/YIBcClU0FfBsTzbO4tjhc63U7TyYNKO2tlosxnBIcSpX57uu4qgVRk+NMlqYGCZQU+Q96TrnLs0xPKi97ARXJZnYVgGluG+R555CUYs67zDjYdYV87UNBhhrVB8bYIyK+wRW+pj1OQwfoWxJmobXs4Hojy46TStRY95Sv1Nl2k+mSbVwe1hzF8kI5TGSvmXwgfKs+OIVWULad8kXsDeeWAgcnCjLam5284h0I95ciTVU12AceR99VHOJF8HoPLuge3qsnOrjy9ogjwcqwszmoCTr9Co/q1pDFGRllNNGgeQO1T75iy47kUZ5LKZRxBChWWHEdhSLZQh0CQRTnA0KbZHACyfRfbFSJjvD0b4bIoPLYBcxW63ewCipF1QFo="
      before_script:
        - ./reports.sh  # Creates directories and files for reports
        - export GO111MODULE=on
        - go mod vendor  # Download dependencies
        - make ci  # Run tests and generate reports (See `ci` step in Makefile)
      script:
        - sonar-scanner  # Run analysis using SonarCloud scanner plugin

    - language: go  # CodeClimate
      before_script:
        - ./reports.sh  # Create directories and files for reports
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter  # Download CodeClimate test reporter
        - chmod +x ./cc-test-reporter  # Make it executable
        - ./cc-test-reporter before-build  # Notify CodeClimate of pending report
      script:
        - export GO111MODULE=on
        - go mod vendor  # Download dependencies
        - make ci  # Run tests and generate reports (See `ci` step in Makefile)
      after_script:
        - ./cc-test-reporter after-build -t gocov --exit-code $TRAVIS_TEST_RESULT  # Send report to CodeClimate or notify it of failing build based on exit code

    - language: go  # Push if on master
      services:
        - docker
      if: branch = master
      script:
        - export GO111MODULE=on
        - go mod vendor  # Download dependencies
        - echo "$DOCKER_PASSWORD" | docker login docker.pkg.github.com -u "$DOCKER_USERNAME" --password-stdin  # Login to GitHub Registry using Travis environment variables
        - make container  # Create dirty and latest images
        - make push  # Push image to registry

notifications:
  email: false
